{"version":3,"sources":["services/requestTmdb.js","components/FeaturedMovieStyles.js","context/Context.js","components/FeaturedMovie.jsx","components/HeaderStyles.js","components/imageNetflix.png","components/Header.jsx","pages/HomePageStyles.js","components/RenderListStyles.js","components/RenderList.jsx","pages/HomePage.jsx","context/Provider.jsx","App.js","reportWebVitals.js","index.js"],"names":["urlBase","languageAndKey","fetchDataBase","endpoint","a","fetch","response","json","console","log","getInfos","category","title","items","getInfosMovie","movieId","type","info","undefined","Featured","styled","div","props","background","Assistir","button","MInhaLista","Context","createContext","FeaturedMovie","item","useState","selected","setSelected","context","useContext","myList","setmyList","useEffect","id","infos","original_name","vote_average","Date","first_air_date","getFullYear","number_of_seasons","Number","overview","onClick","movie","results","some","mv","HeaderPage","header","Header","src","imageNetflix","alt","to","href","xmlns","height","viewBox","width","fill","d","Home","Category","section","MovieRight","MovieLeft","renderImage","list","ItsMyList","map","adcMylist","RenderList","moveX","setMoveX","x","Math","round","window","innerWidth","listWidth","length","handleRight","enableBackground","points","handleLeft","opacity","style","marginLeft","HomePage","lists","setLists","featured","setFeatured","black","setBlack","selectFeatured","selects","find","filter","s","movieChosen","floor","random","getLists","scrollListener","scrollY","addEventListener","removeEventListener","i","Provider","children","globalState","value","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2c181311.chunk.js","sourcesContent":["const urlBase = 'https://api.themoviedb.org/3';\nconst languageAndKey = '&api_key=e70501c774a05cf85580e32a27897dc6&language=pt-BR';\n\n/* \n- originais netflix\n- recomendados\n- em alta\n- ação\n- comédia\n- terror\n- romance\n- documentários\n*/\n\nasync function fetchDataBase(endpoint) {\n  try {\n    const response = await fetch(`${urlBase}${endpoint}${languageAndKey}`);\n    const json = await response.json();\n    return json;\n  } catch {\n    console.log('Erro')\n  }\n}\n\nexport const getInfos = async () => {\n  return [\n    {\n      category: 'originals',\n      title: 'Originais da Netflix',\n      items: await fetchDataBase('/discover/tv?with_network=213')\n    },\n    {\n      category: 'trending',\n      title: 'Recomendados',\n      items: await fetchDataBase('/trending/all/week?')\n    },\n    {\n      category: 'toprated',\n      title: 'Em alta',\n      items: await fetchDataBase('/movie/top_rated?')\n    },\n    {\n      category: 'action',\n      title: 'Ação',\n      items: await fetchDataBase('/discover/movie?with_genres=28')\n    },\n    {\n      category: 'comedy',\n      title: 'Comédia',\n      items: await fetchDataBase('/discover/movie?with_genres=35')\n    },\n    {\n      category: 'horror',\n      title: 'Terror',\n      items: await fetchDataBase('/discover/movie?with_genres=27')\n    },\n    {\n      category: 'romance',\n      title: 'Romance',\n      items: await fetchDataBase('/discover/movie?with_genres=10749')\n    },\n    {\n      category: 'documentary',\n      title: 'Documentários',\n      items: await fetchDataBase('/discover/movie?with_genres=99')\n    }\n  ];\n}\n\nexport const getInfosMovie = async (movieId, type) => {\n  let info = {};\n  if(movieId) {\n    switch(type) {\n      case 'movie': \n        info = await fetchDataBase(`/movie/${movieId}?${languageAndKey}`);\n        break;    \n      case 'tv':\n        info = await fetchDataBase(`/tv/${movieId}?${languageAndKey}`);\n        break;\n      default:\n        return undefined;  \n    }\n  }\n  return info;\n}","import styled from \"styled-components\";\n\nexport const Featured = styled.div`\n  background-image: url(${ props => `${props.urlBase}${props.background}` });\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n  margin: -42px -8px 0 -8px;\n  div {\n    width: inherit;\n    height: inherit;\n    background: linear-gradient(to top, #111 10%, transparent 90%);\n    div {\n      width: inherit;\n      height: inherit;\n      background: linear-gradient(to right, #111 30%, transparent 70%);\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding-left: 30px;\n      padding-bottom: 150px;\n      h1 {\n        background-color: transparent;\n        font-size: 60px;\n        font-weight: bold;\n        margin-bottom: 0;\n      }\n      section {\n        background-color: transparent;\n        font-size: 18px;\n        font-weight: bold;\n        margin-top: 15px;\n        display: flex;\n        width: 350px;\n\n        p {\n          margin: 0;\n          color: #46d369;\n          margin-right: 15px;\n        }\n        span {\n          margin: 0 15px 0 0;\n        }\n      }\n      p {\n        background-color: transparent;\n        margin-top: 15px;\n        font-size: 20px;\n        color: #999;\n        max-width: 40vw;\n      }\n      nav {\n        background-color: transparent;\n        margin-top: 0;\n        button {\n          display: inline-block;\n          font-size: 20px;\n          font-weight: bold;\n          padding: 12px 25px;\n          border-radius: 5px;\n          text-decoration: none;\n          margin-right: 10px;\n          border: none;\n          transition: all ease 0.2s;\n          cursor: pointer;\n          margin-bottom: 15px;\n        }\n        button:hover {\n          opacity: 0.7;\n        }\n        button:active {\n          background-color: white;\n          opacity: 0.7;\n        }\n      }\n      span {\n        background-color: transparent;\n        strong {\n          background-color: transparent;\n          font-size: 18px;\n          color: #999;\n        }\n      }\n    }\n  }\n  `;\n\n  export const Assistir = styled.button`\n    background-color: #FFF;\n    color: #000;\n  `;\n\nexport const MInhaLista = styled.button`\n  background-color: #333;\n  color: #FFF;\n`;","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useEffect } from 'react';\nimport { getInfosMovie } from '../services/requestTmdb';\nimport { useState } from 'react/cjs/react.development';\nimport { Assistir, Featured, MInhaLista } from './FeaturedMovieStyles';\nimport Context from '../context/Context';\n\nexport default function FeaturedMovie({ item }) {\n\n  // estado que armazana as informações do \"featured movie\"\n  const [selected, setSelected] = useState(null);\n\n  // url base do endereço das imagens\n  const baseUrlImgList = 'https://image.tmdb.org/t/p/original';\n\n  const context = useContext(Context);\n  const { myList, setmyList } = context;\n\n  // requisição das informações mais detalhadas do \"featured movie\"\n  useEffect(() => {\n    const getInfos = async () => {\n      const infos = await getInfosMovie(item.id, 'tv');\n      setSelected(infos);\n    }\n    getInfos();\n  }, []);\n\n  const adcMylist = (movie) => {\n    const alreadyExist = myList[0].items.results.some((mv) => mv.id === movie.id);\n    if (alreadyExist === true) return undefined;\n    setmyList([{\n      category: 'mylist',\n      title: 'Minha Lista',\n      items: {\n        results: [...myList[0].items.results, movie],\n      }\n    }]);\n  }\n\n  return (\n    <Featured\n      background={ item['backdrop_path'] }\n      urlBase={ baseUrlImgList }\n    >\n    <div>\n        <div>\n          { console.log(selected) }\n          <h1>{ selected && selected.original_name }</h1>\n          <section>\n            <p>{ selected && selected.vote_average } pontos</p>\n            <span>{ selected && new Date(selected.first_air_date).getFullYear() }</span>\n            <span>\n              { selected && selected.number_of_seasons } temporada{ Number(selected && selected.number_of_seasons) > 1 && 's'}\n            </span>\n          </section>\n          <p>{ selected && selected.overview }</p>\n          <nav>\n            <Assistir type=\"button\">▶ Assistir</Assistir>\n            <MInhaLista\n              type=\"button\"\n              onClick={ () => adcMylist(selected) }\n            >\n              + Minha Lista\n            </MInhaLista>\n          </nav>\n          <span><strong>Gênero:</strong></span>\n        </div>\n    </div>  \n    </Featured>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const HeaderPage = styled.header`\n  position: fixed;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 35px;\n  padding-right: 35px;\n  align-items: center;\n  background: ${ ({ background }) => background\n    ? `background-color: rgb(17, 17, 17, 0.8)`\n    : `linear-gradient(to bottom, #111 15%, transparent 85%)` };\n  transition: all ease 0.5s;\n  nav {\n    background-color: transparent;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    img {\n      background-color: transparent;\n      height: 25px;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n    p {\n      background-color: transparent;\n      margin-right: 15px;\n      cursor: pointer;\n      text-decoration: none;\n      transition: all ease 0.25s;\n    }\n    p:hover {\n      color: #999;\n    }\n    a {\n      background-color: transparent;\n      text-decoration: none;\n    }\n  }\n  div {\n    background-color: transparent;\n    img {\n      background-color: transparent;\n      height: 35px;\n      cursor: pointer;\n      border-radius: 3px;\n    }\n    svg {\n      background-color: transparent;\n      height: 35px;\n      margin-right: 25px;\n      cursor: pointer;\n      path {\n        background-color: transparent;\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/imageNetflix.3778ab49.png\";","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderPage } from './HeaderStyles';\nimport imageNetflix from './imageNetflix.png'\n\nexport default function Header({ background }) {\n  return (\n    <HeaderPage background={ background }>\n      <nav>\n        <img src={ imageNetflix } alt=\"logo netflix\"/>\n        <Link to=\"/homepage\">\n          <p>Inicio</p>\n        </Link>\n        <a href=\"#originals\">\n          <p>Séries</p>\n        </a>\n        <a href=\"#mylist\">\n        <p>Minha lista</p>\n        </a>\n        <a href=\"#toprated\">\n          <p>Em alta</p>\n        </a>\n      </nav>\n      <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"35px\" viewBox=\"0 0 24 24\" width=\"35px\" fill=\"#fff\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>\n        <img src=\"https://occ-0-6172-1567.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABXYGYCun9Sa2P1_GTaVtADVKfP2uC9e206A3KM1eABgccajzvO4PAR5XMPRiqqrY7SvvY_lneVww04vkQaDMuQ6I-wzm.png?r=c71\" alt=\"logo netflix\"/>\n      </div>\n    </HeaderPage>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  background-color: #111;\n`;\n\nexport const Category = styled.section`\n  margin-top: -150px;\n  background-color: transparent;\n  div {\n    background-color: transparent;\n    :hover svg {\n      opacity: 1;\n    }\n    h2 {\n      margin: 5px 0 0 30px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      overflow-x: hidden;\n      padding-left: 30px;\n      div {\n        background-color: transparent;\n        max-width: max-content;\n        display: flex;\n        padding-left: 0px;\n        transition: all ease 0.5s;\n        padding-bottom: 0;\n        section {\n          background-color: transparent;\n          width: 150px;\n          transition: all ease 0.2s;\n          height: max-content;\n          img {\n            width: 150px;\n            transform: scale(0.9);\n            cursor: pointer;\n            transition: all ease 0.2s;\n          }\n          svg {\n            visibility: hidden;\n            transition: all ease 0.2s;\n            margin: 5px;\n            cursor: pointer;\n          }\n        }\n        section:hover {\n          box-shadow: 0 5px 15px black;\n          svg {\n            visibility: visible;\n          }\n          svg:hover {\n            fill: #46d369;\n          }\n          svg:active {\n            fill: white;\n          }\n          img {\n            transform: scale(1);\n            display: inherit;\n          }\n        }\n      }\n    }\n  }\n`;","import styled from \"styled-components\";\nimport { Category } from \"../pages/HomePageStyles\";\n\nexport const MovieRight = styled.div`\n  svg {\n    position: absolute;\n    width: 45px;\n    height: 225px;\n    background-color: rgba(0, 0, 0, 0.6);\n    /* margin-left: -55px; */\n    right: 0;\n    z-index: 99;\n    opacity: 0;\n    cursor: pointer;\n    transition: all ease 0.25s;\n  }\n  ${Category}:hover svg {\n    opacity: 0.8;\n  }\n`;\n\nexport const MovieLeft = styled.div`\n  svg {\n    position: absolute;\n    width: 45px;\n    height: 225px;\n    background-color: rgba(0, 0, 0, 0.6);\n    /* margin-left: -55px; */\n    left: 0;\n    z-index: 99;\n    opacity: 0;\n    cursor: pointer;\n    transition: all ease 0.25s;\n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useState }/* , { useState } */ from \"react\";\nimport Context from \"../context/Context\";\nimport { MovieLeft, MovieRight } from \"./RenderListStyles\";\n\nexport const renderImage = (list, myList, setmyList, ItsMyList) => {\n  // url base do endereço das imagens\n  const baseUrlImgList = 'https://image.tmdb.org/t/p/w200';\n\n  // função que adiciona um filme a \"Minha Lista\"\n  const adcMylist = (movie) => {\n    const alreadyExist = myList[0].items.results.some((mv) => mv.id === movie.id);\n    if (alreadyExist === true) return undefined;\n    setmyList([{\n      category: 'mylist',\n      title: 'Minha Lista',\n      items: {\n        results: [...myList[0].items.results, movie],\n      }\n    }]);\n  }\n\n  // função que renderiza as capas dos filmes\n  return list.items.results.map((movie) => (\n    <section key={ movie.id }>\n      <img\n        src={`${baseUrlImgList}${ movie['poster_path'] }`}\n        alt={ movie['original_title'] }\n      />\n      {/* // esse ternário controla a exibição do botão \"+\"  que tem em cada card de filmes,\n      ele é necessário pois não é exibido esse botão na categoria minha lista*/}\n      { ItsMyList === false && <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"28px\" viewBox=\"0 0 24 24\" width=\"28px\" fill=\"#fff\" onClick={ () => adcMylist(movie) }>\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n      </svg> }\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#fff\">\n        <path d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 21h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.58 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2zM9 9l4.34-4.34L12 10h9v2l-3 7H9V9zM1 9h4v12H1z\"/>\n      </svg>\n    </section>\n  ))\n}\n\n// função que lida com o botão esquerdo da barra de rolagem\nconst handleLeft = (moveX, setMoveX) => {\n  let x = moveX + Math.round(window.innerWidth / 2);\n  if(x > 0) {\n    x = 0;\n  }\n  setMoveX(x);\n}\n\n// função que lida com o botão direito da barra de rolagem\nconst handleRight = (moveX, setMoveX, list) => {\n  let x = moveX - Math.round(window.innerWidth / 2);\n  let listWidth = list.items.results.length * 150;\n  if (window.innerWidth - listWidth > x) {\n    x = (window.innerWidth - listWidth) - 90\n  }\n  setMoveX(x);\n}\n\nexport default function RenderList({ list, ItsMyList }) {\n\n  const context = useContext(Context);\n  const { myList, setmyList } = context;\n\n  // estado que gerencia informação das barras de rolagem\n  const [ moveX, setMoveX] = useState(0);\n\n  return (\n    <div key={ list.category } id={ list.category}>\n      <h2>{ list.title }</h2>\n      <MovieRight onClick={ () => handleRight(moveX, setMoveX, list) }>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"50px\" viewBox=\"0 0 24 24\" width=\"50px\" fill=\"#fff\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\"/></g></svg>\n      </MovieRight>\n      <MovieLeft onClick={ () => handleLeft(moveX, setMoveX) }>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"50px\" viewBox=\"0 0 24 24\" width=\"50px\" fill=\"#fff\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\"/><path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\"/></svg>\n      </MovieLeft>\n      <div>\n        <div style={{ marginLeft: moveX }}>\n          { list.items.results && renderImage(list, myList, setmyList, ItsMyList) }\n        </div>\n      </div>\n    </div>\n  );\n}\n","// eslint-disable-next-line no-unused-vars\nimport React, { useContext, useEffect, useState } from 'react';\nimport FeaturedMovie from '../components/FeaturedMovie';\nimport Header from '../components/Header';\nimport { getInfos } from '../services/requestTmdb';\nimport RenderList from '../components/RenderList';\nimport { Category, Home } from './HomePageStyles';\nimport Context from '../context/Context';\n\nexport default function HomePage() {\n\n  const context = useContext(Context);\n\n  // estado para gerencias as listas de filmes e suas categorias\n  const [lists, setLists] = useState([]);\n\n  // estado para armazenar a informação do filme aleatório\n  // selecionado para ficar no componente \"featured movie\"\n  const [featured, setFeatured] = useState(null);\n\n  // estado para armazer a informação da cor do background do header\n  const [black, setBlack] = useState(false);\n\n  //Função que seleciona um filme aleaório para ficar no component \"featured movie\"\n  const selectFeatured = (lists) => {\n    const originals = lists.find((list) => list.category === 'originals');\n    const selects = originals.items.results.filter((s) => s.overview.length > 1);\n    const randomNumber = Math.floor(Math.random() * (selects.length - 1));\n    const movieChosen = selects[randomNumber];\n    setFeatured(movieChosen);\n  }\n\n  useEffect(() => {\n    // função async que pega os dados de filmes e as listas da API\n    const getLists = async () => {\n      const list = await getInfos();\n      setLists(list);\n      selectFeatured(list);\n    }\n    getLists();\n  }, []);\n\n  useEffect(() => {\n    // função que manipula o backgroung do header\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlack(true);\n      } else {\n        setBlack(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n  return (\n    <Home>\n      <Header background={ black } />\n      { featured && <FeaturedMovie item={ featured } />}\n      <Category>\n        {/* renderiza lista de filmes que foram retirados da API */}\n        { lists.map((list, i) => <RenderList key={ i } list={list} ItsMyList={ false }/>) }\n\n        {/* renderiza \"Minha lista\" se existir */}\n        { context.myList[0].items.results.length > 0\n          && context.myList\n          .map((list, i) => <RenderList key={ i } list={list} ItsMyList={ true } />) }\n      </Category>\n    </Home>\n  )\n}\n\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n\nexport default function Provider({ children }) {\n\n  const [myList, setmyList] = useState([{\n    category: 'mylist',\n    title: 'Minha Lista',\n    items: {\n      results: [],\n    }\n  }]);\n\n  const globalState = {\n    myList,\n    setmyList\n  }\n\n  return (\n    <div>\n      <Context.Provider value={ globalState }>\n        { children }\n      </Context.Provider>\n    </div>\n  )\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object).isRequired,\n  /* children: PropTypes.string.isRequired, */\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\n/* import Login from './pages/Login'; */\nimport HomePage from './pages/HomePage';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/\" component={ HomePage } />\n        {/* <Route exact path=\"/mov\" component={ Login } /> */}\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}