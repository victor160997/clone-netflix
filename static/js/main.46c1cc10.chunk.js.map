{"version":3,"sources":["components/imageNetflix.png","pages/LoginStyles.js","pages/netflixBack.png","pages/Login.jsx","components/FeaturedMovieStyles.js","context/Context.js","components/FeaturedMovie.jsx","components/HeaderStyles.js","components/RenderFilterStyles.js","components/RenderFilter.jsx","components/Header.jsx","services/requestTmdb.js","pages/HomePageStyles.js","components/RenderListStyles.js","components/RenderList.jsx","pages/HomePage.jsx","context/Provider.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","styled","div","props","background","validity","Login","useState","log","setLog","setValidity","email","password","usuario","setusuario","handleChange","target","length","name","value","backNetflix","src","logoNetflix","alt","type","placeholder","onChange","e","onClick","to","Featured","urlBase","Assistir","button","MInhaLista","Context","createContext","FeaturedMovie","item","context","useContext","myList","setmyList","original_name","vote_average","Date","first_air_date","getFullYear","overview","href","movie","items","results","some","mv","id","category","title","HeaderPage","header","searching","FilterList","RenderFilter","list","map","original_title","Header","lists","setSearching","filtereds","setFiltereds","inputSearch","searchValue","setSearchValue","useEffect","filter","movieName","searchWord","toLowerCase","includes","push","findMovie","imageNetflix","handleSearch","xmlns","height","viewBox","width","fill","d","languageAndKey","fetchDataBase","endpoint","a","fetch","response","json","console","getInfos","Home","Category","section","MovieRight","MovieLeft","renderImage","ItsMyList","history","verifyFavorites","JSON","parse","localStorage","getItem","m","adcMylist","favoriteFilms","setItem","stringify","excluiFilm","adcFavorites","RenderList","moveX","setMoveX","x","Math","round","window","innerWidth","listWidth","handleRight","enableBackground","points","handleLeft","opacity","style","marginLeft","HomePage","setLists","featured","setFeatured","black","setBlack","selectFeatured","selects","find","s","movieChosen","floor","random","getLists","scrollListener","scrollY","addEventListener","removeEventListener","i","Provider","children","globalState","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.46c1cc10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/imageNetflix.3778ab49.png\";","import styled from \"styled-components\";\n\nexport const LoginPage = styled.div`\n  @media screen and (min-width: 769px) {\n\n    background-image: url(${ props => `${ props.background }`});\n    background-size: cover;\n    width: 99.6vw;\n    height: 99.1vh;\n    margin: -5px -5px -5px -5px;\n    img {\n      height: 45px;\n      margin-left: 3%;\n      margin-top: 20px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      section {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        align-items: flex-start;\n        background-color: rgba(0, 0, 0, 0.7);\n        max-width: 470px;\n        min-width: 470px;\n        height: 620px;\n        padding: 40px 68px 40px;\n        h1 {\n            background-color: transparent;\n            font-size: 32px;\n            font-weight: 700;\n            margin-bottom: 28px;\n          }\n        form {\n          background-color: transparent;\n          width: 100%;\n          input {\n            background-color: transparent;\n            border-radius: 4px;\n            border: solid #e87c03 ${({validity}) => validity ? 0 : `2px`};\n            border-top: 0;\n            border-left: 0;\n            border-right: 0;\n            color: #fff;\n            height: 50px;\n            line-height: 50px;\n            padding: 16px;\n            width: 100%;\n            color: #8c8c8c;\n            font-size: 18px;\n            background-color: #333;\n            margin-bottom: 18px;\n          }\n          input:focus {\n            color: white;\n          }\n          p {\n            display:${({validity}) => validity ? `none` : `inherit`};\n            background-color: transparent;\n            color: #e87c03;\n            margin-top: -15px;\n            padding: 6px 3px;\n            font-size: 13px;\n          }\n          button {\n            border-radius: 4px;\n            font-size: 16px;\n            font-weight: 700;\n            margin: 24px 0 12px;\n            width: 100%;\n            max-width: 100%;\n            padding: 16px;\n            text-decoration: none;\n            background: #e50914;\n            border:none;\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n  @media screen and (max-width: 769px) {\n    background-image: url(${ props => `${ props.background }`});\n    background-size: cover;\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    img {\n      height: 45px;\n      margin-left: 3%;\n      margin-top: 20px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      margin-top: 15vh;\n      h1 {\n        background-color: transparent;\n      }\n      section {\n        background-color: transparent;\n        width: 80vw;\n        form {\n          background-color: transparent;\n          width:100%;\n          input {\n            background-color: transparent;\n            border-radius: 4px;\n            border: solid #e87c03 ${({validity}) => validity ? 0 : `2px`};\n            border-top: 0;\n            border-left: 0;\n            border-right: 0;\n            color: #fff;\n            height: 50px;\n            line-height: 50px;\n            padding: 16px;\n            width: 100%;\n            color: #8c8c8c;\n            font-size: 18px;\n            background-color: #333;\n            margin-bottom: 18px;\n          }\n          p {\n            display:${({validity}) => validity ? `none` : `inherit`};\n            background-color: transparent;\n            color: #e87c03;\n            margin-top: -15px;\n            padding: 6px 3px;\n            font-size: 10px;\n          }\n          button {\n            border-radius: 4px;\n            font-size: 16px;\n            font-weight: 700;\n            margin: 24px 0 12px;\n            width: 100%;\n            max-width: 100%;\n            padding: 16px;\n            text-decoration: none;\n            background: #e50914;\n            border:none;\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n  div {\n    section {\n      form {\n        p {\n          display:${({validity}) => validity ? `none` : `inherit`};\n        }\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/netflixBack.476b87be.png\";","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport logoNetflix from '../components/imageNetflix.png';\nimport { LoginPage } from './LoginStyles';\nimport backNetflix from './netflixBack.png';\n\nexport default function Login() {\n\n  // gerencia a informação se o usuário logou ou não\n  const [log, setLog] = useState(false);\n\n  // gerencia a validade das informações do usuário\n  const [validity, setValidity] = useState(true);\n\n  // gerencia as informações do usuário\n  const [usuario, setusuario] = useState({\n    email: '',\n    password: ''\n  });\n\n  // função que lida com as alterações no input\n  const handleChange = ({ target }) => {\n    // verificação se as informações inseridas são válidas\n    if(usuario.email.length > 5 || usuario.password.length > 4) {\n      setValidity(true);\n    }\n    setusuario({\n      ...usuario,\n      [target.name]: target.value\n    });\n  }\n\n  const { email, password } = usuario;\n\n  // se as informações forem válidas, lida com o botão \"entrar\" e faz\n  // o redirecionamento para a homepage\n  const handleSubmit = () => {\n    /* const { history } = props; */\n    if(usuario.email.length < 5 || usuario.password.length < 4) {\n      setValidity(false);\n    } else {\n      setLog(true)\n    }\n  }\n\n  return (\n    <LoginPage\n      background={ backNetflix }\n      validity={ validity }\n    >\n      <img\n        src={ logoNetflix }\n        alt=\"netflix\"\n        data-testid=\"logo-netflix\"\n      />\n      <div>\n\n        <section>\n          <h1>Entrar</h1>\n          <form>\n            <input\n              type=\"email\"\n              value={ email }\n              name=\"email\"\n              placeholder=\"Email ou número de telefone\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-email\"\n            />\n            <p data-testid=\"check-validity\">Informe um email ou número de telefone válido.</p>\n            <input\n              type=\"password\"\n              value={ password }\n              name=\"password\"\n              placeholder=\"Senha\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-password\"\n            />\n            <p data-testid=\"check-validity\">A senha deve ter entre 4 e 60 caracteres.</p>\n            <button\n              type=\"button\"\n              onClick={ handleSubmit }\n              data-testid=\"button-entrar\"\n            >\n              Entrar\n            </button>\n          </form>\n        </section>\n      </div>\n      { log && <Redirect to=\"/movie-page\" /> }\n    </LoginPage>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Featured = styled.div`\n  background-image: url(${ props => `${props.urlBase}${props.background}` });\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n  margin: -42px -8px 0 -8px;\n  div {\n    width: inherit;\n    height: inherit;\n    background: linear-gradient(to top, #111 10%, transparent 90%);\n    div {\n      width: inherit;\n      height: inherit;\n      background: linear-gradient(to right, #111 30%, transparent 70%);\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding-left: 30px;\n      padding-bottom: 150px;\n      h1 {\n        background-color: transparent;\n        font-size: 60px;\n        font-weight: bold;\n        margin-bottom: 0;\n      }\n      section {\n        background-color: transparent;\n        font-size: 18px;\n        font-weight: bold;\n        margin-top: 15px;\n        display: flex;\n        width: 350px;\n\n        p {\n          margin: 0;\n          color: #46d369;\n          margin-right: 15px;\n        }\n        span {\n          margin: 0 15px 0 0;\n        }\n      }\n      p {\n        background-color: transparent;\n        margin-top: 15px;\n        font-size: 20px;\n        color: #999;\n        max-width: 40vw;\n      }\n      nav {\n        background-color: transparent;\n        margin-top: 0;\n        button {\n          display: inline-block;\n          font-size: 20px;\n          font-weight: bold;\n          padding: 12px 25px;\n          border-radius: 5px;\n          text-decoration: none;\n          margin-right: 10px;\n          border: none;\n          transition: all ease 0.2s;\n          cursor: pointer;\n          margin-bottom: 15px;\n        }\n        button:hover {\n          opacity: 0.7;\n        }\n        button:active {\n          background-color: white;\n          opacity: 0.7;\n        }\n      }\n      span {\n        background-color: transparent;\n        strong {\n          background-color: transparent;\n          font-size: 18px;\n          color: #999;\n        }\n      }\n    }\n  }\n\n  @media screen and (max-width: 760px) {\n    margin: 0px -28px 0 -8px;\n    height: 90vh;\n    div {\n      div {\n        h1 {\n          font-size: 40px;\n        }\n        section {\n          font-size: 16px;\n        }\n        p {\n          font-size: 14px;\n          max-width: 100%;\n          margin-right: 30px;\n        }\n        nav {\n          button {\n            font-size: 16px;\n          }\n        }\n        span {\n          strong {\n            font-size: 14px;\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  export const Assistir = styled.button`\n    background-color: #FFF;\n    color: #000;\n  `;\n\nexport const MInhaLista = styled.button`\n  background-color: #333;\n  color: #FFF;\n`;","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","/* eslint-disable react/prop-types */\nimport React, { useContext,/* , useEffect */ } from 'react';\n/* import { getInfosMovie } from '../services/requestTmdb';\nimport { useState } from 'react/cjs/react.development'; */\nimport { Assistir, Featured, MInhaLista } from './FeaturedMovieStyles';\nimport Context from '../context/Context';\n\nexport default function FeaturedMovie({ item }) {\n\n  // estado que armazana as informações do \"featured movie\"\n  /* const [selected, setSelected] = useState(); */\n\n  // url base do endereço das imagens\n  const baseUrlImgList = 'https://image.tmdb.org/t/p/original';\n\n  const context = useContext(Context);\n  const { myList, setmyList } = context;\n\n  // requisição das informações mais detalhadas do \"featured movie\"\n  /* useEffect(() => {\n    const getInfos = async () => {\n      const infos = await getInfosMovie(Number(item.id));\n      setSelected(infos);\n    }\n    getInfos();\n  }, []); */\n\n  const adcMylist = (movie) => {\n    const alreadyExist = myList[0].items.results.some((mv) => mv.id === movie.id);\n    if (alreadyExist === true) return undefined;\n    setmyList([{\n      category: 'mylist',\n      title: 'Minha Lista',\n      items: {\n        results: [...myList[0].items.results, movie],\n      }\n    }]);\n  };\n\n  return (\n    <Featured\n      background={ item['backdrop_path'] }\n      urlBase={ baseUrlImgList }\n    >\n    <div>\n        <div>\n          <h1>{ item && item.original_name }</h1>\n          <section>\n            <p>{ item && item.vote_average } pontos</p>\n            <span>{ item && new Date(item.first_air_date).getFullYear() }</span>\n            <span>\n              { item && (new Date().getFullYear() - new Date(item.first_air_date).getFullYear()) < 2 ? '1 temporada'\n                : `${new Date().getFullYear() - new Date(item.first_air_date).getFullYear()} temporadas`\n                /* selected.number_of_seasons } temporada{ Number(selected && selected.number_of_seasons) > 1 && 's' */}\n            </span>\n          </section>\n          <p>{ item && item.overview }</p>\n          <nav>\n            <Assistir type=\"button\">▶ Assistir</Assistir>\n            <a href=\"#mylist\">\n              <MInhaLista\n                href=\"#mylist\"\n                type=\"button\"\n                onClick={ () => adcMylist(item) }\n              >\n                + Minha Lista\n              </MInhaLista>\n            </a>\n          </nav>\n          <span><strong>Gênero:</strong></span>\n        </div>\n    </div>  \n    </Featured>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const HeaderPage = styled.header`\n  position: fixed;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: ${ ({ searching }) => searching ? 'max-content' : '60px' };\n  overflow-y: ${ ({ searching }) => searching ? 'auto' : 'hidden' };;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 35px;\n  padding-right: 35px;\n  align-items: center;\n  background: ${ ({ background }) => background\n    ? `background-color: rgb(17, 17, 17, 0.8)`\n    : `linear-gradient(to bottom, #111 15%, transparent 85%)` };\n  transition: all ease 0.5s;\n  nav {\n    background-color: transparent;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    img {\n      background-color: transparent;\n      height: 25px;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n    p {\n      background-color: transparent;\n      margin-right: 15px;\n      cursor: pointer;\n      text-decoration: none;\n      transition: all ease 0.25s;\n    }\n    p:hover {\n      color: #999;\n    }\n    a {\n      background-color: transparent;\n      text-decoration: none;\n    }\n    @media screen and (max-width: 760px) {\n      a {\n        display: none;\n      }\n    }\n  }\n  div {\n    background-color: transparent;\n    img {\n      background-color: transparent;\n      height: 35px;\n      cursor: pointer;\n      border-radius: 3px;\n    }\n    svg {\n      background-color: transparent;\n      height: 35px;\n      margin-right: 25px;\n      cursor: pointer;\n      path {\n        background-color: transparent;\n      }\n    }\n  }\n`;","import styled from \"styled-components\";\n\nexport const FilterList = styled.div`\n\n`;","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport { FilterList } from './RenderFilterStyles'\n\nexport default function RenderFilter({ list }) {\n  return (\n    <FilterList>\n      { list.map((movie) => <h1 key={ movie.id } >{ movie.original_title }</h1>) }\n    </FilterList>\n  )\n}\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react/cjs/react.development';\nimport Context from '../context/Context';\nimport { HeaderPage } from './HeaderStyles';\nimport imageNetflix from './imageNetflix.png'\nimport RenderFilter from './RenderFilter';\n\nexport default function Header({ background, lists }) {\n  \n  const { searching, setSearching } = useContext(Context);\n\n  const [filtereds, setFiltereds] = useState([]);\n  const [searchValue, setSearchValue] = useState({\n    inputSearch: '',\n  });\n\n  const handleClick = () => {\n    setSearching(!searching);\n  }\n\n  const findMovie = () => {\n    let filter = [];\n    lists.map((list) => {\n      list.items.results.map((movie) => {\n        const movieName = movie.original_title;\n        const searchWord = searchValue.inputSearch.toLowerCase();\n        if(movieName) {\n          return movieName.toLowerCase().includes(searchWord) && filter.push(movie);\n        }\n        return undefined;\n      })\n    });\n    setFiltereds(filter);\n  }\n  \n  useEffect(() => {\n    findMovie();\n  }, [searchValue])\n\n  const handleSearch = ({ target }) => {\n    setSearchValue({ [target.name]: target.value });\n  }\n\n  return (\n    <HeaderPage background={ background } searching={ searching }>\n      <nav>\n        <img src={ imageNetflix } alt=\"logo netflix\"/>\n        <Link to=\"/movie-page\">\n          <p>Inicio</p>\n        </Link>\n        <a href=\"#originals\">\n          <p>Séries</p>\n        </a>\n        <a href=\"#mylist\">\n        <p>Minha lista</p>\n        </a>\n        <a href=\"#toprated\">\n          <p>Em alta</p>\n        </a>\n      </nav>\n      <div>\n        { searching\n          && <input\n          type=\"text\"\n          name='inputSearch'\n          value={ searchValue.inputSearch }\n          onChange={ (e) => handleSearch(e) }\n          /> \n        }\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"35px\" viewBox=\"0 0 24 24\" width=\"35px\" fill=\"#fff\" onClick={ () => handleClick()}>\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        </svg>\n        <img src=\"https://occ-0-6172-1567.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABXYGYCun9Sa2P1_GTaVtADVKfP2uC9e206A3KM1eABgccajzvO4PAR5XMPRiqqrY7SvvY_lneVww04vkQaDMuQ6I-wzm.png?r=c71\" alt=\"logo netflix\"/>\n        { filtereds.length > 0 && searching && <RenderFilter list={ filtereds } />}\n      </div>\n    </HeaderPage>\n  )\n}\n","const urlBase = 'https://api.themoviedb.org/3';\nconst languageAndKey = '&api_key=e70501c774a05cf85580e32a27897dc6&language=pt-BR';\n\nasync function fetchDataBase(endpoint) {\n  try {\n    const response = await fetch(`${urlBase}${endpoint}${languageAndKey}`);\n    const json = await response.json();\n    return json;\n  } catch {\n    console.log('Erro')\n  }\n}\n\nexport const getInfos = async () => {\n  return [\n    {\n      category: 'originals',\n      title: 'Originais da Netflix',\n      items: await fetchDataBase('/discover/tv?with_network=213')\n    },\n    {\n      category: 'trending',\n      title: 'Recomendados',\n      items: await fetchDataBase('/trending/all/week?')\n    },\n    {\n      category: 'toprated',\n      title: 'Em alta',\n      items: await fetchDataBase('/movie/top_rated?')\n    },\n    {\n      category: 'action',\n      title: 'Ação',\n      items: await fetchDataBase('/discover/movie?with_genres=28')\n    },\n    {\n      category: 'comedy',\n      title: 'Comédia',\n      items: await fetchDataBase('/discover/movie?with_genres=35')\n    },\n    {\n      category: 'horror',\n      title: 'Terror',\n      items: await fetchDataBase('/discover/movie?with_genres=27')\n    },\n    {\n      category: 'romance',\n      title: 'Romance',\n      items: await fetchDataBase('/discover/movie?with_genres=10749')\n    },\n    {\n      category: 'documentary',\n      title: 'Documentários',\n      items: await fetchDataBase('/discover/movie?with_genres=99')\n    }\n  ];\n}\n\nexport const getInfosMovie = async (movieId) => {\n  const info = await fetchDataBase(`/tv/${movieId}?`);\n  return info;\n}","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  background-color: #111;\n`;\n\nexport const Category = styled.section`\n  margin-top: -150px;\n  background-color: transparent;\n  div {\n    background-color: transparent;\n    :hover svg {\n      opacity: 1;\n    }\n    h2 {\n      margin: 5px 0 0 30px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      overflow-x: hidden;\n      padding-left: 30px;\n      div {\n        background-color: transparent;\n        max-width: max-content;\n        display: flex;\n        padding-left: 0px;\n        transition: all ease 0.5s;\n        padding-bottom: 0;\n        section {\n          background-color: transparent;\n          width: 150px;\n          transition: all ease 0.2s;\n          height: max-content;\n          img {\n            width: 150px;\n            transform: scale(0.9);\n            cursor: pointer;\n            transition: all ease 0.2s;\n          }\n          svg {\n            visibility: hidden;\n            transition: all ease 0.2s;\n            margin: 5px;\n            cursor: pointer;\n          }\n        }\n        section:hover {\n          box-shadow: 0 5px 15px black;\n          svg {\n            visibility: visible;\n          }\n          svg:hover {\n            fill: #46d369;\n          }\n          svg:active {\n            fill: white;\n          }\n          img {\n            transform: scale(1);\n            display: inherit;\n          }\n        }\n      }\n    }\n  }\n  @media screen and (max-width: 760px) {\n    margin-right: -28px;\n  }\n`;","import styled from \"styled-components\";\nimport { Category } from \"../pages/HomePageStyles\";\n\nexport const MovieRight = styled.div`\n  svg {\n    position: absolute;\n    width: 45px;\n    height: 225px;\n    background-color: rgba(0, 0, 0, 0.6);\n    /* margin-left: -55px; */\n    right: 0;\n    z-index: 99;\n    opacity: 0;\n    cursor: pointer;\n    transition: all ease 0.25s;\n  }\n  ${Category}:hover svg {\n    opacity: 0.8;\n  }\n  @media screen and (max-width: 760px) {\n    svg {\n      margin-right: -25px;\n      opacity: 1;\n    }  \n  }\n`;\n\nexport const MovieLeft = styled.div`\n  svg {\n    position: absolute;\n    width: 45px;\n    height: 225px;\n    background-color: rgba(0, 0, 0, 0.6);\n    /* margin-left: -55px; */\n    left: 0;\n    z-index: 99;\n    opacity: 0;\n    cursor: pointer;\n    transition: all ease 0.25s;\n  }\n  @media screen and (max-width: 760px) {\n    svg {\n      opacity: 1;\n    }  \n  }\n`;\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useState } from \"react\";\nimport Context from \"../context/Context\";\nimport { MovieLeft, MovieRight } from \"./RenderListStyles\";\n\nexport const renderImage = (list, myList, setmyList, ItsMyList, history) => {\n  // url base do endereço das imagens\n  const baseUrlImgList = 'https://image.tmdb.org/t/p/w200';\n\n  // função que adiciona um filme a \"Minha Lista\"\n  const adcMylist = (movie) => {\n    const alreadyExist = myList[0].items.results.some((mv) => mv.id === movie.id);\n    if (alreadyExist === true) return undefined;\n    setmyList([{\n      category: 'mylist',\n      title: 'Minha Lista',\n      items: {\n        results: [...myList[0].items.results, movie],\n      }\n    }]);\n  }\n\n  // função que adciona o filme como favorito e salva a informação no loca storage\n  const adcFavorites = (e, movie) => {\n    const favoriteFilms = JSON.parse(localStorage.getItem('favoriteFilms'));\n    const alreadyExist = favoriteFilms.some((m) => m.id === movie.id);\n    if (alreadyExist === false) {\n      localStorage.setItem('favoriteFilms', JSON.stringify([...favoriteFilms, movie]));\n      history.push('/movie-page');\n    } else {\n      const excluiFilm = favoriteFilms.filter((m) => m.id !== movie.id);\n      localStorage.setItem('favoriteFilms', JSON.stringify([...excluiFilm]));\n      history.push('/movie-page');\n    }\n  }\n\n  // função que verifica no local storage se o filme está entre os favoritos\n  const verifyFavorites = (movie) => {\n    const favoriteFilms = JSON.parse(localStorage.getItem('favoriteFilms'));\n    const alreadyExist = favoriteFilms.some((m) => m.id === movie.id);\n    if (alreadyExist) {\n      return '#46d369';\n    } else {\n    return '#fff';\n    }\n  }\n\n  // função que renderiza as capas dos filmes\n  return list.items.results.map((movie) => (\n    <section key={ movie.id }>\n      <img\n        src={`${baseUrlImgList}${ movie['poster_path'] }`}\n        alt={ movie['original_title'] }\n      />\n      {/* // esse ternário controla a exibição do botão \"+\"  que tem em cada card de filmes,\n      ele é necessário pois não é exibido esse botão na categoria minha lista*/}\n        { ItsMyList === false && <a href=\"#mylist\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"28px\" viewBox=\"0 0 24 24\" width=\"28px\" fill=\"#fff\" onClick={ () => adcMylist(movie) }>\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n        </svg></a> }\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill={ verifyFavorites(movie) } onClick={ (e) => adcFavorites(e, movie) }>\n        <path d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 21h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.58 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2zM9 9l4.34-4.34L12 10h9v2l-3 7H9V9zM1 9h4v12H1z\"/>\n      </svg>\n    </section>\n  ))\n}\n\n// função que lida com o botão esquerdo da barra de rolagem\nconst handleLeft = (moveX, setMoveX) => {\n  let x = moveX + Math.round(window.innerWidth / 2);\n  if(x > 0) {\n    x = 0;\n  }\n  setMoveX(x);\n}\n\n// função que lida com o botão direito da barra de rolagem\nconst handleRight = (moveX, setMoveX, list) => {\n  let x = moveX - Math.round(window.innerWidth / 2);\n  let listWidth = list.items.results.length * 150;\n  if (window.innerWidth - listWidth > x) {\n    x = (window.innerWidth - listWidth) - 90\n  }\n  setMoveX(x);\n}\n\nexport default function RenderList({ list, ItsMyList, history }) {\n\n  const context = useContext(Context);\n  const { myList, setmyList } = context;\n\n  // estado que gerencia informação das barras de rolagem\n  const [ moveX, setMoveX] = useState(0);\n\n  return (\n    <div key={ list.category } id={ list.category}>\n      <h2>{ list.title }</h2>\n      <MovieRight onClick={ () => handleRight(moveX, setMoveX, list) }>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"50px\" viewBox=\"0 0 24 24\" width=\"50px\" fill=\"#fff\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\"/></g></svg>\n      </MovieRight>\n      <MovieLeft onClick={ () => handleLeft(moveX, setMoveX) }>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"50px\" viewBox=\"0 0 24 24\" width=\"50px\" fill=\"#fff\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\"/><path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\"/></svg>\n      </MovieLeft>\n      <div>\n        <div style={{ marginLeft: moveX }}>\n          { list.items.results && renderImage(list, myList, setmyList, ItsMyList, history) }\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/prop-types */\n// eslint-disable-next-line no-unused-vars\nimport React, { useContext, useEffect, useState } from 'react';\nimport FeaturedMovie from '../components/FeaturedMovie';\nimport Header from '../components/Header';\nimport { getInfos } from '../services/requestTmdb';\nimport RenderList from '../components/RenderList';\nimport { Category, Home } from './HomePageStyles';\nimport Context from '../context/Context';\n\nexport default function HomePage({ history }) {\n\n  const context = useContext(Context);\n\n  // estado para gerencias as listas de filmes e suas categorias\n  const [lists, setLists] = useState([]);\n\n  // estado para armazenar a informação do filme aleatório\n  // selecionado para ficar no componente \"featured movie\"\n  const [featured, setFeatured] = useState(null);\n\n  // estado para armazer a informação da cor do background do header\n  const [black, setBlack] = useState(false);\n\n  //Função que seleciona um filme aleaório para ficar no component \"featured movie\"\n  const selectFeatured = (lists) => {\n    const originals = lists.find((list) => list.category === 'originals');\n    const selects = originals.items.results.filter((s) => s.overview.length > 1);\n    const randomNumber = Math.floor(Math.random() * (selects.length - 1));\n    const movieChosen = selects[randomNumber];\n    setFeatured(movieChosen);\n  }\n\n  useEffect(() => {\n    // função async que pega os dados de filmes e as listas da API\n    const getLists = async () => {\n      const list = await getInfos();\n      setLists(list);\n      selectFeatured(list);\n    }\n    getLists();\n  }, []);\n\n  useEffect(() => {\n    // função que manipula o backgroung do header\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlack(true);\n      } else {\n        setBlack(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n  useEffect(() => {\n    const favoriteFilms = JSON.parse(localStorage.getItem('favoriteFilms'));\n    if (!favoriteFilms) {\n      localStorage.setItem('favoriteFilms', JSON.stringify([]));\n    }\n  }, []);\n\n  return (\n    <Home>\n      <Header background={ black } lists={ lists }/>\n      { featured && context.searching === false && <FeaturedMovie item={ featured } />}\n      { context.searching === false &&  <Category>\n        {/* renderiza lista de filmes que foram retirados da API */}\n        { lists.map((list, i) => <RenderList key={ i } list={list} ItsMyList={ false } history={ history } />) }\n\n        {/* renderiza \"Minha lista\" se existir */}\n        { context.myList[0].items.results.length > 0\n          && context.myList\n          .map((list, i) => <RenderList key={ i } list={list} ItsMyList={ true } history={ history } />) }\n      </Category> }\n    </Home>\n  )\n}\n\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n\nexport default function Provider({ children }) {\n\n  const [myList, setmyList] = useState([{\n    category: 'mylist',\n    title: 'Minha Lista',\n    items: {\n      results: [],\n    }\n  }]);\n\n  const [searching, setSearching] = useState(false);\n\n  const globalState = {\n    myList,\n    setmyList,\n    searching,\n    setSearching\n  }\n\n  return (\n    <div>\n      <Context.Provider value={ globalState }>\n        { children }\n      </Context.Provider>\n    </div>\n  )\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object).isRequired,\n  /* children: PropTypes.string.isRequired, */\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/movie-page\" component={ HomePage } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}