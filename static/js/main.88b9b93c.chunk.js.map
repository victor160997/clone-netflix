{"version":3,"sources":["components/imageNetflix.png","pages/LoginStyles.js","pages/netflixBack.png","pages/Login.jsx","services/requestTmdb.js","components/FeaturedMovieStyles.js","context/Context.js","components/FeaturedMovie.jsx","components/HeaderStyles.js","components/Header.jsx","pages/HomePageStyles.js","pages/HomePage.jsx","context/Provider.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","styled","div","props","background","validity","Login","useState","log","setLog","setValidity","email","password","usuario","setusuario","handleChange","target","length","name","value","backNetflix","src","logoNetflix","alt","type","placeholder","onChange","e","onClick","to","urlBase","languageAndKey","fetchDataBase","endpoint","a","fetch","response","json","console","getInfos","category","title","items","getInfosMovie","movieId","info","Featured","Assistir","button","MInhaLista","Context","createContext","FeaturedMovie","item","selected","setSelected","context","useContext","myList","setmyList","useEffect","id","infos","original_name","vote_average","Date","first_air_date","getFullYear","number_of_seasons","Number","overview","movie","results","some","mv","HeaderPage","header","Header","imageNetflix","href","xmlns","height","viewBox","width","fill","d","Home","section","HomePage","featured","setFeatured","black","setBlack","selectFeatured","lists","selects","find","list","filter","s","movieChosen","Math","floor","random","getLists","scrollListener","window","scrollY","addEventListener","removeEventListener","Provider","children","globalState","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.88b9b93c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/imageNetflix.3778ab49.png\";","import styled from \"styled-components\";\n\nexport const LoginPage = styled.div`\n  background-image: url(${ props => `${ props.background }`});\n  background-size: cover;\n  width: 99.6vw;\n  height: 99.1vh;\n  margin: -5px -5px -5px -5px;\n  img {\n    height: 45px;\n    margin-left: 3%;\n    margin-top: 20px;\n    background-color: transparent;\n  }\n  div {\n    background-color: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    section {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      align-items: flex-start;\n      background-color: rgba(0, 0, 0, 0.7);\n      max-width: 470px;\n      min-width: 470px;\n      height: 620px;\n      padding: 40px 68px 40px;\n      h1 {\n          background-color: transparent;\n          font-size: 32px;\n          font-weight: 700;\n          margin-bottom: 28px;\n        }\n      form {\n        background-color: transparent;\n        width: 100%;\n        input {\n          background-color: transparent;\n          border-radius: 4px;\n          border: solid #e87c03 ${({validity}) => validity ? 0 : `2px`};\n          border-top: 0;\n          border-left: 0;\n          border-right: 0;\n          color: #fff;\n          height: 50px;\n          line-height: 50px;\n          padding: 16px;\n          width: 100%;\n          color: #8c8c8c;\n          font-size: 18px;\n          background-color: #333;\n          margin-bottom: 18px;\n        }\n        input:focus {\n          color: white;\n        }\n        p {\n          display:${({validity}) => validity ? `none` : `inherit`};\n          background-color: transparent;\n          color: #e87c03;\n          margin-top: -15px;\n          padding: 6px 3px;\n          font-size: 13px;\n        }\n        button {\n          border-radius: 4px;\n          font-size: 16px;\n          font-weight: 700;\n          margin: 24px 0 12px;\n          width: 100%;\n          max-width: 100%;\n          padding: 16px;\n          text-decoration: none;\n          background: #e50914;\n          border:none;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/netflixBack.476b87be.png\";","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport logoNetflix from '../components/imageNetflix.png';\nimport { LoginPage } from './LoginStyles';\nimport backNetflix from './netflixBack.png';\n\nexport default function Login() {\n\n  // gerencia a informação se o usuário logou ou não\n  const [log, setLog] = useState(false);\n\n  // gerencia a validade das informações do usuário\n  const [validity, setValidity] = useState(true);\n\n  // gerencia as informações do usuário\n  const [usuario, setusuario] = useState({\n    email: '',\n    password: ''\n  });\n\n  // função que lida com as alterações no input\n  const handleChange = ({ target }) => {\n    // verificação se as informações inseridas são válidas\n    if(usuario.email.length > 5 || usuario.password.length > 4) {\n      setValidity(true);\n    }\n    setusuario({\n      ...usuario,\n      [target.name]: target.value\n    });\n  }\n\n  const { email, password } = usuario;\n\n  // se as informações forem válidas, lida com o botão \"entrar\" e faz\n  // o redirecionamento para a homepage\n  const handleSubmit = () => {\n    /* const { history } = props; */\n    if(usuario.email.length < 5 || usuario.password.length < 4) {\n      setValidity(false);\n    } else {\n      setLog(true)\n    }\n  }\n\n  return (\n    <LoginPage\n      background={ backNetflix }\n      validity={ validity }\n    >\n      <img\n        src={ logoNetflix }\n        alt=\"netflix\"\n        data-testid=\"logo-netflix\"\n      />\n      <div>\n\n        <section>\n          <h1>Entrar</h1>\n          <form>\n            <input\n              type=\"email\"\n              value={ email }\n              name=\"email\"\n              placeholder=\"Email ou número de telefone\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-email\"\n            />\n            <p data-testid=\"check-validity\">Informe um email ou número de telefone válido.</p>\n            <input\n              type=\"password\"\n              value={ password }\n              name=\"password\"\n              placeholder=\"Senha\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-password\"\n            />\n            <p data-testid=\"check-validity\">A senha deve ter entre 4 e 60 caracteres.</p>\n            <button\n              type=\"button\"\n              onClick={ handleSubmit }\n              data-testid=\"button-entrar\"\n            >\n              Entrar\n            </button>\n          </form>\n        </section>\n      </div>\n      { log && <Redirect to=\"/movie-page\" /> }\n    </LoginPage>\n  )\n}\n","const urlBase = 'https://api.themoviedb.org/3';\nconst languageAndKey = '&api_key=e70501c774a05cf85580e32a27897dc6&language=pt-BR';\n\n/* \n- originais netflix\n- recomendados\n- em alta\n- ação\n- comédia\n- terror\n- romance\n- documentários\n*/\n\nasync function fetchDataBase(endpoint) {\n  try {\n    const response = await fetch(`${urlBase}${endpoint}${languageAndKey}`);\n    const json = await response.json();\n    return json;\n  } catch {\n    console.log('Erro')\n  }\n}\n\nexport const getInfos = async () => {\n  return [\n    {\n      category: 'originals',\n      title: 'Originais da Netflix',\n      items: await fetchDataBase('/discover/tv?with_network=213')\n    },\n    {\n      category: 'trending',\n      title: 'Recomendados',\n      items: await fetchDataBase('/trending/all/week?')\n    },\n    {\n      category: 'toprated',\n      title: 'Em alta',\n      items: await fetchDataBase('/movie/top_rated?')\n    },\n    {\n      category: 'action',\n      title: 'Ação',\n      items: await fetchDataBase('/discover/movie?with_genres=28')\n    },\n    {\n      category: 'comedy',\n      title: 'Comédia',\n      items: await fetchDataBase('/discover/movie?with_genres=35')\n    },\n    {\n      category: 'horror',\n      title: 'Terror',\n      items: await fetchDataBase('/discover/movie?with_genres=27')\n    },\n    {\n      category: 'romance',\n      title: 'Romance',\n      items: await fetchDataBase('/discover/movie?with_genres=10749')\n    },\n    {\n      category: 'documentary',\n      title: 'Documentários',\n      items: await fetchDataBase('/discover/movie?with_genres=99')\n    }\n  ];\n}\n\nexport const getInfosMovie = async (movieId) => {\n  const info = await fetchDataBase(`/tv/${movieId}?&language=pt-BR&api_key=e70501c774a05cf85580e32a27897dc6`);\n  return info;\n}","import styled from \"styled-components\";\n\nexport const Featured = styled.div`\n  background-image: url(${ props => `${props.urlBase}${props.background}` });\n  background-size: cover;\n  background-position: center;\n  height: 100vh;\n  margin: -42px -8px 0 -8px;\n  div {\n    width: inherit;\n    height: inherit;\n    background: linear-gradient(to top, #111 10%, transparent 90%);\n    div {\n      width: inherit;\n      height: inherit;\n      background: linear-gradient(to right, #111 30%, transparent 70%);\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding-left: 30px;\n      padding-bottom: 150px;\n      h1 {\n        background-color: transparent;\n        font-size: 60px;\n        font-weight: bold;\n        margin-bottom: 0;\n      }\n      section {\n        background-color: transparent;\n        font-size: 18px;\n        font-weight: bold;\n        margin-top: 15px;\n        display: flex;\n        width: 350px;\n\n        p {\n          margin: 0;\n          color: #46d369;\n          margin-right: 15px;\n        }\n        span {\n          margin: 0 15px 0 0;\n        }\n      }\n      p {\n        background-color: transparent;\n        margin-top: 15px;\n        font-size: 20px;\n        color: #999;\n        max-width: 40vw;\n      }\n      nav {\n        background-color: transparent;\n        margin-top: 0;\n        button {\n          display: inline-block;\n          font-size: 20px;\n          font-weight: bold;\n          padding: 12px 25px;\n          border-radius: 5px;\n          text-decoration: none;\n          margin-right: 10px;\n          border: none;\n          transition: all ease 0.2s;\n          cursor: pointer;\n          margin-bottom: 15px;\n        }\n        button:hover {\n          opacity: 0.7;\n        }\n        button:active {\n          background-color: white;\n          opacity: 0.7;\n        }\n      }\n      span {\n        background-color: transparent;\n        strong {\n          background-color: transparent;\n          font-size: 18px;\n          color: #999;\n        }\n      }\n    }\n  }\n  `;\n\n  export const Assistir = styled.button`\n    background-color: #FFF;\n    color: #000;\n  `;\n\nexport const MInhaLista = styled.button`\n  background-color: #333;\n  color: #FFF;\n`;","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","/* eslint-disable react/prop-types */\nimport React, { useContext, useEffect } from 'react';\nimport { getInfosMovie } from '../services/requestTmdb';\nimport { useState } from 'react/cjs/react.development';\nimport { Assistir, Featured, MInhaLista } from './FeaturedMovieStyles';\nimport Context from '../context/Context';\n\nexport default function FeaturedMovie({ item }) {\n\n  // estado que armazana as informações do \"featured movie\"\n  const [selected, setSelected] = useState(null);\n\n  // url base do endereço das imagens\n  const baseUrlImgList = 'https://image.tmdb.org/t/p/original';\n\n  const context = useContext(Context);\n  const { myList, setmyList } = context;\n\n  // requisição das informações mais detalhadas do \"featured movie\"\n  useEffect(() => {\n    const getInfos = async () => {\n      const infos = await getInfosMovie(item.id);\n      setSelected(infos);\n    }\n    getInfos();\n  }, []);\n\n  const adcMylist = (movie) => {\n    const alreadyExist = myList[0].items.results.some((mv) => mv.id === movie.id);\n    if (alreadyExist === true) return undefined;\n    setmyList([{\n      category: 'mylist',\n      title: 'Minha Lista',\n      items: {\n        results: [...myList[0].items.results, movie],\n      }\n    }]);\n  }\n\n  return (\n    <Featured\n      background={ item['backdrop_path'] }\n      urlBase={ baseUrlImgList }\n    >\n    <div>\n        <div>\n          { console.log(selected) }\n          <h1>{ selected && selected.original_name }</h1>\n          <section>\n            <p>{ selected && selected.vote_average } pontos</p>\n            <span>{ selected && new Date(selected.first_air_date).getFullYear() }</span>\n            <span>\n              { selected && selected.number_of_seasons } temporada{ Number(selected && selected.number_of_seasons) > 1 && 's'}\n            </span>\n          </section>\n          <p>{ selected && selected.overview }</p>\n          <nav>\n            <Assistir type=\"button\">▶ Assistir</Assistir>\n            <MInhaLista\n              type=\"button\"\n              onClick={ () => adcMylist(selected) }\n            >\n              + Minha Lista\n            </MInhaLista>\n          </nav>\n          <span><strong>Gênero:</strong></span>\n        </div>\n    </div>  \n    </Featured>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const HeaderPage = styled.header`\n  position: fixed;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  padding-left: 35px;\n  padding-right: 35px;\n  align-items: center;\n  background: ${ ({ background }) => background\n    ? `background-color: rgb(17, 17, 17, 0.8)`\n    : `linear-gradient(to bottom, #111 15%, transparent 85%)` };\n  transition: all ease 0.5s;\n  nav {\n    background-color: transparent;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    img {\n      background-color: transparent;\n      height: 25px;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n    p {\n      background-color: transparent;\n      margin-right: 15px;\n      cursor: pointer;\n      text-decoration: none;\n      transition: all ease 0.25s;\n    }\n    p:hover {\n      color: #999;\n    }\n    a {\n      background-color: transparent;\n      text-decoration: none;\n    }\n  }\n  div {\n    background-color: transparent;\n    img {\n      background-color: transparent;\n      height: 35px;\n      cursor: pointer;\n      border-radius: 3px;\n    }\n    svg {\n      background-color: transparent;\n      height: 35px;\n      margin-right: 25px;\n      cursor: pointer;\n      path {\n        background-color: transparent;\n      }\n    }\n  }\n`;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderPage } from './HeaderStyles';\nimport imageNetflix from './imageNetflix.png'\n\nexport default function Header({ background }) {\n  return (\n    <HeaderPage background={ background }>\n      <nav>\n        <img src={ imageNetflix } alt=\"logo netflix\"/>\n        <Link to=\"/homepage\">\n          <p>Inicio</p>\n        </Link>\n        <a href=\"#originals\">\n          <p>Séries</p>\n        </a>\n        <a href=\"#mylist\">\n        <p>Minha lista</p>\n        </a>\n        <a href=\"#toprated\">\n          <p>Em alta</p>\n        </a>\n      </nav>\n      <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"35px\" viewBox=\"0 0 24 24\" width=\"35px\" fill=\"#fff\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>\n        <img src=\"https://occ-0-6172-1567.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABXYGYCun9Sa2P1_GTaVtADVKfP2uC9e206A3KM1eABgccajzvO4PAR5XMPRiqqrY7SvvY_lneVww04vkQaDMuQ6I-wzm.png?r=c71\" alt=\"logo netflix\"/>\n      </div>\n    </HeaderPage>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  background-color: #111;\n`;\n\nexport const Category = styled.section`\n  margin-top: -150px;\n  background-color: transparent;\n  div {\n    background-color: transparent;\n    :hover svg {\n      opacity: 1;\n    }\n    h2 {\n      margin: 5px 0 0 30px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      overflow-x: hidden;\n      padding-left: 30px;\n      div {\n        background-color: transparent;\n        max-width: max-content;\n        display: flex;\n        padding-left: 0px;\n        transition: all ease 0.5s;\n        padding-bottom: 0;\n        section {\n          background-color: transparent;\n          width: 150px;\n          transition: all ease 0.2s;\n          height: max-content;\n          img {\n            width: 150px;\n            transform: scale(0.9);\n            cursor: pointer;\n            transition: all ease 0.2s;\n          }\n          svg {\n            visibility: hidden;\n            transition: all ease 0.2s;\n            margin: 5px;\n            cursor: pointer;\n          }\n        }\n        section:hover {\n          box-shadow: 0 5px 15px black;\n          svg {\n            visibility: visible;\n          }\n          svg:hover {\n            fill: #46d369;\n          }\n          svg:active {\n            fill: white;\n          }\n          img {\n            transform: scale(1);\n            display: inherit;\n          }\n        }\n      }\n    }\n  }\n`;","// eslint-disable-next-line no-unused-vars\nimport React, { useContext, useEffect, useState } from 'react';\nimport FeaturedMovie from '../components/FeaturedMovie';\nimport Header from '../components/Header';\nimport { getInfos } from '../services/requestTmdb';\n/* import RenderList from '../components/RenderList';\nimport { Category, Home } from './HomePageStyles';\nimport Context from '../context/Context'; */\nimport { Home } from './HomePageStyles';\n\nexport default function HomePage() {\n/* \n  const context = useContext(Context);\n\n  // estado para gerencias as listas de filmes e suas categorias\n  const [lists, setLists] = useState([]); */\n\n  // estado para armazenar a informação do filme aleatório\n  // selecionado para ficar no componente \"featured movie\"\n  const [featured, setFeatured] = useState(null);\n\n  // estado para armazer a informação da cor do background do header\n  const [black, setBlack] = useState(false);\n\n  //Função que seleciona um filme aleaório para ficar no component \"featured movie\"\n  const selectFeatured = (lists) => {\n    const originals = lists.find((list) => list.category === 'originals');\n    const selects = originals.items.results.filter((s) => s.overview.length > 1);\n    const randomNumber = Math.floor(Math.random() * (selects.length - 1));\n    const movieChosen = selects[randomNumber];\n    setFeatured(movieChosen);\n  }\n\n  useEffect(() => {\n    // função async que pega os dados de filmes e as listas da API\n    const getLists = async () => {\n      const list = await getInfos();\n     /*  setLists(list); */\n      selectFeatured(list);\n    }\n    getLists();\n  }, []);\n\n  useEffect(() => {\n    // função que manipula o backgroung do header\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlack(true);\n      } else {\n        setBlack(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n  return (\n    <Home>\n      <Header background={ black } />\n      { featured && <FeaturedMovie item={ featured } />}\n      {/* <Category> */}\n        {/* renderiza lista de filmes que foram retirados da API */}\n        {/* { lists.map((list, i) => <RenderList key={ i } list={list} ItsMyList={ false }/>) } */}\n\n        {/* renderiza \"Minha lista\" se existir */}\n        {/* { context.myList[0].items.results.length > 0\n          && context.myList\n          .map((list, i) => <RenderList key={ i } list={list} ItsMyList={ true } />) }\n      </Category> */}\n    </Home>\n  )\n}\n\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n\nexport default function Provider({ children }) {\n\n  const [myList, setmyList] = useState([{\n    category: 'mylist',\n    title: 'Minha Lista',\n    items: {\n      results: [],\n    }\n  }]);\n\n  const globalState = {\n    myList,\n    setmyList\n  }\n\n  return (\n    <div>\n      <Context.Provider value={ globalState }>\n        { children }\n      </Context.Provider>\n    </div>\n  )\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object).isRequired,\n  /* children: PropTypes.string.isRequired, */\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/movie-page\" component={ HomePage } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}