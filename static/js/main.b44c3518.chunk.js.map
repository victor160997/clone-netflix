{"version":3,"sources":["components/imageNetflix.png","pages/LoginStyles.js","pages/netflixBack.png","pages/Login.jsx","pages/HomePageStyles.js","pages/HomePage.jsx","context/Context.js","context/Provider.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","styled","div","props","background","validity","Login","useState","log","setLog","setValidity","email","password","usuario","setusuario","handleChange","target","length","name","value","backNetflix","src","logoNetflix","alt","type","placeholder","onChange","e","onClick","to","Home","section","HomePage","Context","createContext","Provider","children","category","title","items","results","globalState","myList","setmyList","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"kOAAe,MAA0B,yC,cCE5BA,EAAYC,IAAOC,IAAV,q9DACK,SAAAC,GAAK,gBAAQA,EAAMC,eAsCZ,qBAAEC,SAAyB,EAAH,SAkBtC,qBAAEA,SAAsB,oBC3D7B,MAA0B,wC,OCO1B,SAASC,IAGtB,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAGA,EAAgCF,oBAAS,GAAzC,mBAAOF,EAAP,KAAiBK,EAAjB,KAGA,EAA8BH,mBAAS,CACrCI,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAgBC,EAAhB,KAMMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,QAEnBH,EAAQF,MAAMM,OAAS,GAAKJ,EAAQD,SAASK,OAAS,IACvDP,GAAY,GAEdI,EAAW,2BACND,GADK,kBAEPG,EAAOE,KAAOF,EAAOG,UAIlBR,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAaf,OACE,eAACZ,EAAD,CACEI,WAAagB,EACbf,SAAWA,EAFb,UAIE,qBACEgB,IAAMC,EACNC,IAAI,UACJ,cAAY,iBAEd,8BAEE,oCACE,wCACA,iCACE,uBACEC,KAAK,QACLL,MAAQR,EACRO,KAAK,QACLO,YAAY,iCACZC,SAAW,SAACC,GAAD,OAAOZ,EAAaY,IAC/B,cAAY,gBAEd,mBAAG,cAAY,iBAAf,kEACA,uBACEH,KAAK,WACLL,MAAQP,EACRM,KAAK,WACLO,YAAY,QACZC,SAAW,SAACC,GAAD,OAAOZ,EAAaY,IAC/B,cAAY,mBAEd,mBAAG,cAAY,iBAAf,uDACA,wBACEH,KAAK,SACLI,QA5CS,WAEhBf,EAAQF,MAAMM,OAAS,GAAKJ,EAAQD,SAASK,OAAS,EACvDP,GAAY,GAEZD,GAAO,IAwCC,cAAY,gBAHd,4BAUJD,GAAO,cAAC,IAAD,CAAUqB,GAAG,mBCvFrB,IAAMC,EAAO7B,IAAOC,IAAV,uDAIOD,IAAO8B,QAAV,45CCIN,SAASC,IAgDtB,OACE,cAACF,EAAD,4BCzDJ,IAEeG,EAFCC,0BCED,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAEjC,EAA4B7B,mBAAS,CAAC,CACpC8B,SAAU,SACVC,MAAO,cACPC,MAAO,CACLC,QAAS,OAJb,mBAQMC,EAAc,CAClBC,OATF,KAUEC,UAVF,MAaA,OACE,8BACE,cAAC,EAAQR,SAAT,CAAkBhB,MAAQsB,EAA1B,SACIL,MCLKQ,MAXf,WACE,OACE,cAACT,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,cAAcC,UAAYf,IAC5C,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAYzC,UCC3B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAWC,iBAA1B,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.b44c3518.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/imageNetflix.3778ab49.png\";","import styled from \"styled-components\";\n\nexport const LoginPage = styled.div`\n  background-image: url(${ props => `${ props.background }`});\n  background-size: cover;\n  width: 99.6vw;\n  height: 99.1vh;\n  margin: -5px -5px -5px -5px;\n  img {\n    height: 45px;\n    margin-left: 3%;\n    margin-top: 20px;\n    background-color: transparent;\n  }\n  div {\n    background-color: transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    section {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-start;\n      align-items: flex-start;\n      background-color: rgba(0, 0, 0, 0.7);\n      max-width: 470px;\n      min-width: 470px;\n      height: 620px;\n      padding: 40px 68px 40px;\n      h1 {\n          background-color: transparent;\n          font-size: 32px;\n          font-weight: 700;\n          margin-bottom: 28px;\n        }\n      form {\n        background-color: transparent;\n        width: 100%;\n        input {\n          background-color: transparent;\n          border-radius: 4px;\n          border: solid #e87c03 ${({validity}) => validity ? 0 : `2px`};\n          border-top: 0;\n          border-left: 0;\n          border-right: 0;\n          color: #fff;\n          height: 50px;\n          line-height: 50px;\n          padding: 16px;\n          width: 100%;\n          color: #8c8c8c;\n          font-size: 18px;\n          background-color: #333;\n          margin-bottom: 18px;\n        }\n        input:focus {\n          color: white;\n        }\n        p {\n          display:${({validity}) => validity ? `none` : `inherit`};\n          background-color: transparent;\n          color: #e87c03;\n          margin-top: -15px;\n          padding: 6px 3px;\n          font-size: 13px;\n        }\n        button {\n          border-radius: 4px;\n          font-size: 16px;\n          font-weight: 700;\n          margin: 24px 0 12px;\n          width: 100%;\n          max-width: 100%;\n          padding: 16px;\n          text-decoration: none;\n          background: #e50914;\n          border:none;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/netflixBack.476b87be.png\";","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport logoNetflix from '../components/imageNetflix.png';\nimport { LoginPage } from './LoginStyles';\nimport backNetflix from './netflixBack.png';\n\nexport default function Login() {\n\n  // gerencia a informação se o usuário logou ou não\n  const [log, setLog] = useState(false);\n\n  // gerencia a validade das informações do usuário\n  const [validity, setValidity] = useState(true);\n\n  // gerencia as informações do usuário\n  const [usuario, setusuario] = useState({\n    email: '',\n    password: ''\n  });\n\n  // função que lida com as alterações no input\n  const handleChange = ({ target }) => {\n    // verificação se as informações inseridas são válidas\n    if(usuario.email.length > 5 || usuario.password.length > 4) {\n      setValidity(true);\n    }\n    setusuario({\n      ...usuario,\n      [target.name]: target.value\n    });\n  }\n\n  const { email, password } = usuario;\n\n  // se as informações forem válidas, lida com o botão \"entrar\" e faz\n  // o redirecionamento para a homepage\n  const handleSubmit = () => {\n    /* const { history } = props; */\n    if(usuario.email.length < 5 || usuario.password.length < 4) {\n      setValidity(false);\n    } else {\n      setLog(true)\n    }\n  }\n\n  return (\n    <LoginPage\n      background={ backNetflix }\n      validity={ validity }\n    >\n      <img\n        src={ logoNetflix }\n        alt=\"netflix\"\n        data-testid=\"logo-netflix\"\n      />\n      <div>\n\n        <section>\n          <h1>Entrar</h1>\n          <form>\n            <input\n              type=\"email\"\n              value={ email }\n              name=\"email\"\n              placeholder=\"Email ou número de telefone\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-email\"\n            />\n            <p data-testid=\"check-validity\">Informe um email ou número de telefone válido.</p>\n            <input\n              type=\"password\"\n              value={ password }\n              name=\"password\"\n              placeholder=\"Senha\"\n              onChange={ (e) => handleChange(e) }\n              data-testid=\"input-password\"\n            />\n            <p data-testid=\"check-validity\">A senha deve ter entre 4 e 60 caracteres.</p>\n            <button\n              type=\"button\"\n              onClick={ handleSubmit }\n              data-testid=\"button-entrar\"\n            >\n              Entrar\n            </button>\n          </form>\n        </section>\n      </div>\n      { log && <Redirect to=\"/movie-page\" /> }\n    </LoginPage>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  background-color: #111;\n`;\n\nexport const Category = styled.section`\n  margin-top: -150px;\n  background-color: transparent;\n  div {\n    background-color: transparent;\n    :hover svg {\n      opacity: 1;\n    }\n    h2 {\n      margin: 5px 0 0 30px;\n      background-color: transparent;\n    }\n    div {\n      background-color: transparent;\n      overflow-x: hidden;\n      padding-left: 30px;\n      div {\n        background-color: transparent;\n        max-width: max-content;\n        display: flex;\n        padding-left: 0px;\n        transition: all ease 0.5s;\n        padding-bottom: 0;\n        section {\n          background-color: transparent;\n          width: 150px;\n          transition: all ease 0.2s;\n          height: max-content;\n          img {\n            width: 150px;\n            transform: scale(0.9);\n            cursor: pointer;\n            transition: all ease 0.2s;\n          }\n          svg {\n            visibility: hidden;\n            transition: all ease 0.2s;\n            margin: 5px;\n            cursor: pointer;\n          }\n        }\n        section:hover {\n          box-shadow: 0 5px 15px black;\n          svg {\n            visibility: visible;\n          }\n          svg:hover {\n            fill: #46d369;\n          }\n          svg:active {\n            fill: white;\n          }\n          img {\n            transform: scale(1);\n            display: inherit;\n          }\n        }\n      }\n    }\n  }\n`;","// eslint-disable-next-line no-unused-vars\nimport React, { useContext, useEffect, useState } from 'react';\n/* import FeaturedMovie from '../components/FeaturedMovie';\nimport Header from '../components/Header';\nimport { getInfos } from '../services/requestTmdb';\nimport RenderList from '../components/RenderList';\nimport { Category, Home } from './HomePageStyles';\nimport Context from '../context/Context'; */\nimport { Home } from './HomePageStyles'\n\nexport default function HomePage() {\n\n  /* const context = useContext(Context);\n\n  // estado para gerencias as listas de filmes e suas categorias\n  const [lists, setLists] = useState([]);\n\n  // estado para armazenar a informação do filme aleatório\n  // selecionado para ficar no componente \"featured movie\"\n  const [featured, setFeatured] = useState(null);\n\n  // estado para armazer a informação da cor do background do header\n  const [black, setBlack] = useState(false);\n\n  //Função que seleciona um filme aleaório para ficar no component \"featured movie\"\n  const selectFeatured = (lists) => {\n    const originals = lists.find((list) => list.category === 'originals');\n    const selects = originals.items.results.filter((s) => s.overview.length > 1);\n    const randomNumber = Math.floor(Math.random() * (selects.length - 1));\n    const movieChosen = selects[randomNumber];\n    setFeatured(movieChosen);\n  }\n\n  useEffect(() => {\n    // função async que pega os dados de filmes e as listas da API\n    const getLists = async () => {\n      const list = await getInfos();\n      setLists(list);\n      selectFeatured(list);\n    }\n    getLists();\n  }, []);\n\n  useEffect(() => {\n    // função que manipula o backgroung do header\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlack(true);\n      } else {\n        setBlack(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []) */\n\n  return (\n    <Home>\n      oláaaaaaaa\n     {/*  <Header background={ black } />\n      { featured && <FeaturedMovie item={ featured } />}\n      <Category> */}\n        {/* renderiza lista de filmes que foram retirados da API */}\n        {/* { lists.map((list, i) => <RenderList key={ i } list={list} ItsMyList={ false }/>) }\n */}\n        {/* renderiza \"Minha lista\" se existir */}\n        {/* { context.myList[0].items.results.length > 0\n          && context.myList\n          .map((list, i) => <RenderList key={ i } list={list} ItsMyList={ true } />) }\n      </Category> */}\n    </Home>\n  )\n}\n\n\n","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\n\nexport default function Provider({ children }) {\n\n  const [myList, setmyList] = useState([{\n    category: 'mylist',\n    title: 'Minha Lista',\n    items: {\n      results: [],\n    }\n  }]);\n\n  const globalState = {\n    myList,\n    setmyList\n  }\n\n  return (\n    <div>\n      <Context.Provider value={ globalState }>\n        { children }\n      </Context.Provider>\n    </div>\n  )\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object).isRequired,\n  /* children: PropTypes.string.isRequired, */\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/movie-page\" component={ HomePage } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}